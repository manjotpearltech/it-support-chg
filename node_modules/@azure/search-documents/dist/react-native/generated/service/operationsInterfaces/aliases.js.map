{"version":3,"file":"aliases.js","sourceRoot":"","sources":["../../../../../src/generated/service/operationsInterfaces/aliases.ts"],"names":[],"mappings":"AAAA,KAAK;AACL,0CAA0C;AAC1C,qCAAqC;AACrC,KAAK;AACL,8DAA8D;AAC9D,uFAAuF;AACvF,MAAM;;AAEN,WAAW;AACX,iBAAiB;AACjB,iCAAiC;AACjC,2BAA2B;AAC3B,+BAA+B;AAC/B,yBAAyB;AACzB,yCAAyC;AACzC,mCAAmC;AACnC,iCAAiC;AACjC,8BAA8B;AAC9B,wBAAwB;AACxB,+BAA+B;AAE/B,2CAA2C;AAC3C,6BAA6B;AAC7B,QAAQ;AACR,mCAAmC;AACnC,2DAA2D;AAC3D,8CAA8C;AAC9C,QAAQ;AACR,YAAY;AACZ,0BAA0B;AAC1B,6CAA6C;AAC7C,uCAAuC;AACvC,QAAQ;AACR,yDAAyD;AACzD,8CAA8C;AAC9C,QAAQ;AACR,6EAA6E;AAC7E,QAAQ;AACR,4EAA4E;AAC5E,yEAAyE;AACzE,qEAAqE;AACrE,8CAA8C;AAC9C,QAAQ;AACR,oBAAoB;AACpB,yBAAyB;AACzB,0BAA0B;AAC1B,qDAAqD;AACrD,+CAA+C;AAC/C,QAAQ;AACR,2GAA2G;AAC3G,yEAAyE;AACzE,yDAAyD;AACzD,8CAA8C;AAC9C,QAAQ;AACR,YAAY;AACZ,yBAAyB;AACzB,6CAA6C;AAC7C,sBAAsB;AACtB,QAAQ;AACR,sCAAsC;AACtC,2DAA2D;AAC3D,8CAA8C;AAC9C,QAAQ;AACR,SAAS;AACT,yBAAyB;AACzB,0CAA0C;AAC1C,oCAAoC;AACpC,IAAI","sourcesContent":["// /*\n//  * Copyright (c) Microsoft Corporation.\n//  * Licensed under the MIT License.\n//  *\n//  * Code generated by Microsoft (R) AutoRest Code Generator.\n//  * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n//  */\n\n// import {\n//   SearchAlias,\n//   AliasesCreateOptionalParams,\n//   AliasesCreateResponse,\n//   AliasesListOptionalParams,\n//   AliasesListResponse,\n//   AliasesCreateOrUpdateOptionalParams,\n//   AliasesCreateOrUpdateResponse,\n//   AliasesDeleteOptionalParams,\n//   AliasesGetOptionalParams,\n//   AliasesGetResponse,\n// } from \"../models/index.js\";\n\n// /** Interface representing a Aliases. */\n// export interface Aliases {\n//   /**\n//    * Creates a new search alias.\n//    * @param alias The definition of the alias to create.\n//    * @param options The options parameters.\n//    */\n//   create(\n//     alias: SearchAlias,\n//     options?: AliasesCreateOptionalParams,\n//   ): Promise<AliasesCreateResponse>;\n//   /**\n//    * Lists all aliases available for a search service.\n//    * @param options The options parameters.\n//    */\n//   list(options?: AliasesListOptionalParams): Promise<AliasesListResponse>;\n//   /**\n//    * Creates a new search alias or updates an alias if it already exists.\n//    * @param aliasName The definition of the alias to create or update.\n//    * @param alias The definition of the alias to create or update.\n//    * @param options The options parameters.\n//    */\n//   createOrUpdate(\n//     aliasName: string,\n//     alias: SearchAlias,\n//     options?: AliasesCreateOrUpdateOptionalParams,\n//   ): Promise<AliasesCreateOrUpdateResponse>;\n//   /**\n//    * Deletes a search alias and its associated mapping to an index. This operation is permanent, with no\n//    * recovery option. The mapped index is untouched by this operation.\n//    * @param aliasName The name of the alias to delete.\n//    * @param options The options parameters.\n//    */\n//   delete(\n//     aliasName: string,\n//     options?: AliasesDeleteOptionalParams,\n//   ): Promise<void>;\n//   /**\n//    * Retrieves an alias definition.\n//    * @param aliasName The name of the alias to retrieve.\n//    * @param options The options parameters.\n//    */\n//   get(\n//     aliasName: string,\n//     options?: AliasesGetOptionalParams,\n//   ): Promise<AliasesGetResponse>;\n// }\n"]}