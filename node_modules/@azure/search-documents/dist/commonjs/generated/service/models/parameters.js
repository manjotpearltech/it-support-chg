"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.request = exports.allowIndexDowntime = exports.indexName = exports.index = exports.synonymMapName = exports.synonymMap = exports.skillsetName = exports.skillset = exports.indexer = exports.indexerName = exports.select = exports.apiVersion = exports.prefer = exports.ifNoneMatch = exports.ifMatch = exports.dataSourceName = exports.endpoint = exports.accept = exports.dataSource = exports.contentType = void 0;
const mappers_js_1 = require("../models/mappers.js");
exports.contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
exports.dataSource = {
    parameterPath: "dataSource",
    mapper: mappers_js_1.SearchIndexerDataSource,
};
exports.accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String",
        },
    },
};
exports.endpoint = {
    parameterPath: "endpoint",
    mapper: {
        serializedName: "endpoint",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
exports.dataSourceName = {
    parameterPath: "dataSourceName",
    mapper: {
        serializedName: "dataSourceName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.ifMatch = {
    parameterPath: ["options", "ifMatch"],
    mapper: {
        serializedName: "If-Match",
        type: {
            name: "String",
        },
    },
};
exports.ifNoneMatch = {
    parameterPath: ["options", "ifNoneMatch"],
    mapper: {
        serializedName: "If-None-Match",
        type: {
            name: "String",
        },
    },
};
exports.prefer = {
    parameterPath: "prefer",
    mapper: {
        defaultValue: "return=representation",
        isConstant: true,
        serializedName: "Prefer",
        type: {
            name: "String",
        },
    },
};
exports.apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        serializedName: "api-version",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.select = {
    parameterPath: ["options", "select"],
    mapper: {
        serializedName: "$select",
        type: {
            name: "String",
        },
    },
};
exports.indexerName = {
    parameterPath: "indexerName",
    mapper: {
        serializedName: "indexerName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.indexer = {
    parameterPath: "indexer",
    mapper: mappers_js_1.SearchIndexer,
};
exports.skillset = {
    parameterPath: "skillset",
    mapper: mappers_js_1.SearchIndexerSkillset,
};
exports.skillsetName = {
    parameterPath: "skillsetName",
    mapper: {
        serializedName: "skillsetName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.synonymMap = {
    parameterPath: "synonymMap",
    mapper: mappers_js_1.SynonymMap,
};
exports.synonymMapName = {
    parameterPath: "synonymMapName",
    mapper: {
        serializedName: "synonymMapName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.index = {
    parameterPath: "index",
    mapper: mappers_js_1.SearchIndex,
};
exports.indexName = {
    parameterPath: "indexName",
    mapper: {
        serializedName: "indexName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.allowIndexDowntime = {
    parameterPath: ["options", "allowIndexDowntime"],
    mapper: {
        serializedName: "allowIndexDowntime",
        type: {
            name: "Boolean",
        },
    },
};
exports.request = {
    parameterPath: "request",
    mapper: mappers_js_1.AnalyzeRequest,
};
//# sourceMappingURL=parameters.js.map